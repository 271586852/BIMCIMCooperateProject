{
  "version": 3,
  "sources": ["../../autofit.js/autofit.js"],
  "sourcesContent": ["let currRenderDom = null;\r\nlet currelRectification = \"\";\r\nlet currelRectificationLevel = \"\";\r\nlet resizeListener = null;\r\nlet timer = null;\r\nlet currScale = 1;\r\nlet isElRectification = false;\r\nconst autofit = {\r\n  isAutofitRunnig: false,\r\n  init(options = {}, isShowInitTip = true) {\r\n    if (isShowInitTip) {\r\n      console.log( `autofit.js is running`);\r\n    }\r\n    const {\r\n      dw = 1920,\r\n      dh = 1080,\r\n      el = typeof options === \"string\" ? options : \"body\",\r\n      resize = true,\r\n      ignore = [],\r\n      transition = \"none\",\r\n      delay = 0,\r\n    } = options;\r\n    currRenderDom = el;\r\n    let dom = document.querySelector(el);\r\n    if (!dom) {\r\n      console.error(`autofit: '${el}' is not exist`);\r\n      return;\r\n    }\r\n    const style = document.createElement(\"style\");\r\n    const ignoreStyle = document.createElement(\"style\");\r\n    style.lang = \"text/css\";\r\n    ignoreStyle.lang = \"text/css\";\r\n    style.id = \"autofit-style\";\r\n    ignoreStyle.id = \"ignoreStyle\";\r\n    style.innerHTML = `body {overflow: hidden;}`;\r\n    const bodyEl = document.querySelector(\"body\");\r\n    bodyEl.appendChild(style);\r\n    bodyEl.appendChild(ignoreStyle);\r\n    dom.style.height = `${dh}px`;\r\n    dom.style.width = `${dw}px`;\r\n    dom.style.transformOrigin = `0 0`;\r\n    dom.style.overflow = \"hidden\";\r\n    keepFit(dw, dh, dom, ignore);\r\n    resizeListener = () => {\r\n      clearTimeout(timer);\r\n      if (delay != 0)\r\n        timer = setTimeout(() => {\r\n          keepFit(dw, dh, dom, ignore);\r\n          isElRectification &&\r\n            elRectification(currelRectification, currelRectificationLevel);\r\n        }, delay);\r\n      else {\r\n        keepFit(dw, dh, dom, ignore);\r\n        isElRectification &&\r\n          elRectification(currelRectification, currelRectificationLevel);\r\n      }\r\n    };\r\n    resize && window.addEventListener(\"resize\", resizeListener);\r\n    this.isAutofitRunnig = true;\r\n    setTimeout(() => {\r\n      dom.style.transition = `${transition}s`;\r\n    });\r\n  },\r\n  off(el = \"body\") {\r\n    try {\r\n      isElRectification = false;\r\n      window.removeEventListener(\"resize\", resizeListener);\r\n      document.querySelector(\"#autofit-style\").remove();\r\n      const ignoreStyleDOM = document.querySelector(\"#ignoreStyle\");\r\n      ignoreStyleDOM && ignoreStyleDOM.remove();\r\n      document.querySelector(currRenderDom ? currRenderDom : el).style = \"\";\r\n      isElRectification && offelRectification();\r\n    } catch (error) {\r\n      console.error(`autofit: Failed to remove normally`, error);\r\n      this.isAutofitRunnig = false;\r\n    }\r\n    this.isAutofitRunnig &&\r\n      console.log(`autofit.js is off`);\r\n  },\r\n};\r\nfunction elRectification(el, level = 1) {\r\n  if (!autofit.isAutofitRunnig) {\r\n    console.error(\"autofit.js：autofit has not been initialized yet\");\r\n  }\r\n  !el && console.error(`autofit.js：bad selector: ${el}`);\r\n  currelRectification = el;\r\n  currelRectificationLevel = level;\r\n  const currEl = document.querySelectorAll(el);\r\n  if (currEl.length == 0) {\r\n    console.error(\"autofit.js：elRectification found no element\");\r\n    return;\r\n  }\r\n  for (let item of currEl) {\r\n    if (!isElRectification) {\r\n      item.originalWidth = item.clientWidth;\r\n      item.originalHeight = item.clientHeight;\r\n    }\r\n    let rectification = currScale == 1 ? 1 : currScale * level;\r\n    item.style.width = `${item.originalWidth * rectification}px`;\r\n    item.style.height = `${item.originalHeight * rectification}px`;\r\n    item.style.transform = `scale(${1 / currScale})`;\r\n    item.style.transformOrigin = `0 0`;\r\n  }\r\n  isElRectification = true;\r\n}\r\nfunction offelRectification() {\r\n  if (!currelRectification) return;\r\n  for (let item of document.querySelectorAll(currelRectification)) {\r\n    item.style.width = ``;\r\n    item.style.height = ``;\r\n    item.style.transform = ``;\r\n  }\r\n}\r\nfunction keepFit(dw, dh, dom, ignore) {\r\n  let clientHeight = document.documentElement.clientHeight;\r\n  let clientWidth = document.documentElement.clientWidth;\r\n  currScale =\r\n    clientWidth / clientHeight < dw / dh ? clientWidth / dw : clientHeight / dh;\r\n  dom.style.height = `${clientHeight / currScale}px`;\r\n  dom.style.width = `${clientWidth / currScale}px`;\r\n  dom.style.transform = `scale(${currScale})`;\r\n  const ignoreStyleDOM = document.querySelector(\"#ignoreStyle\");\r\n  ignoreStyleDOM.innerHTML = \"\";\r\n  for (let item of ignore) {\r\n    let itemEl = item.el || item.dom;\r\n    typeof item == \"string\" && (itemEl = item);\r\n    if (!itemEl) {\r\n      console.error(`autofit: bad selector: ${itemEl}`);\r\n      continue;\r\n    }\r\n    let realScale = item.scale ? item.scale : 1 / currScale;\r\n    let realFontSize = realScale != currScale ? item.fontSize : \"autofit\";\r\n    let realWidth = realScale != currScale ? item.width : \"autofit\";\r\n    let realHeight = realScale != currScale ? item.height : \"autofit\";\r\n    let regex = new RegExp(`${itemEl}(\\x20|{)`, \"gm\");\r\n    let isIgnored = regex.test(ignoreStyleDOM.innerHTML);\r\n    if (isIgnored) {\r\n      continue;\r\n    }\r\n    ignoreStyleDOM.innerHTML += `\\n${itemEl} { \r\n      transform: scale(${realScale})!important;\r\n      transform-origin: 0 0;\r\n      width: ${realWidth}!important;\r\n      height: ${realHeight}!important;\r\n    }`;\r\n    if (realFontSize) {\r\n      ignoreStyleDOM.innerHTML += `\\n${itemEl} div ,${itemEl} span,${itemEl} a,${itemEl} * {\r\n        font-size: ${realFontSize}px;\r\n      }`;\r\n    }\r\n  }\r\n}\r\nexport { elRectification };\r\nexport default autofit;\r\n"],
  "mappings": "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",
  "names": []
}
